<h2>Select round types</h2>

<form @onsubmit="@(e => this.OnRoundTypesSet.InvokeAsync(this.SelectedOptions))">
    @for (int i = 0; i < this.options.Count; i++)
    {
        var id = i;
        <div>
            <label for="option-@id">@this.options[i].name</label>
            <input type="checkbox" id="option-@id" checked @onchange="@(e => this.ToggleOption(id))">
        </div>
    }
    <button type="submit">Submit</button>
</form>

@code
{
    [Parameter]
    public EventCallback<IEnumerable<string>> OnRoundTypesSet { get; set; } = default!;

    private List<(string name, bool selected)> options = new()
    {
        ("Taboo", true),
        ("Charades", true),
        ("Password", true),
        ("Humming", true)
    };

    private IEnumerable<string> SelectedOptions =>
        this.options
            .Where(option => option.selected)
            .Select(option => option.name);

    private void ToggleOption(int id) =>
        this.options[id] = (this.options[id].name, !this.options[id].selected);
}