@using Fishbowl.Net.Client.Components.Templates
@inherits State
@inject IStringLocalizer<Resources> L

@code
{
    protected override RenderFragment Content =>
        @<StateContainer Title="@this.Round.Type">
            <div class="row mb-3">
                <div class="col">
                    <Timer Start="this.StartedAt" Length="this.Period.Length()" OnExpired="() => this.Expired = true" />
                </div>
            </div>

            @if (this.Word is not null)
            {
                <div class="row mb-3">
                    <div class="col">
                        <div class="card text-white bg-primary">
                            <div class="card-body fs-2">
                                @this.Word!.Value
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col d-grid">
                        <button class="btn btn-success btn-lg" type="button" @onclick="this.ScoreAdded">
                            @L["Components.States.PeriodPlay.GuessedButton"]
                        </button>
                    </div>
                </div>
            }

            @if (this.expired)
            {
                <div class="row mb-3">
                    <div class="col d-grid">
                        <button class="btn btn-danger btn-lg" type="button"
                            @onclick="e => this.OnPeriodFinished.InvokeAsync(DateTimeOffset.UtcNow)">
                            @L["Components.States.PeriodPlay.PassButton"]
                        </button>
                    </div>
                </div>
            }

            <div class="row mt-5">
                <div class="col d-grid">
                    <button class="btn btn-danger" type="button"
                        @onclick="e => this.OnLastScoreRevoked.InvokeAsync()">
                        @L["Components.States.PeriodPlay.RevokeButton"]
                    </button>
                </div>
            </div>
        </StateContainer>;   
}