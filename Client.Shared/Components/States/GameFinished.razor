@inherits State<GameFinished>

<StateContainer>
    <MudContainer>
        <MudAlert Severity="Severity.Success">
            @if(this.winnerTeams.Length > 1)
            {
                @L["Components.States.GameFinished.Draw"] <strong>@string.Join(", ", this.winnerTeams)</strong>
            }
            else
            {
                @L["Components.States.GameFinished.Winner"] <strong>@this.winnerTeams[0]</strong>
            }
        </MudAlert>
    </MudContainer>

    <MudContainer Class="my-10">
        <MudPaper>
            <MudList>
                @for (int i = 0; i < this.Game.Teams.Count; i++)
                {
                    var index = i;
                    var team = this.Game.Teams[index];
                    <MudListItem>
                        <MudText Align="Align.Center">
                            @team.Name (@team.Players.Sum(player => player.Scores.Count))
                        </MudText>
                    </MudListItem>
                }
            </MudList>
        </MudPaper>
    </MudContainer>
    <MudContainer>
        <MudButton
            Variant="Variant.Filled"
            Color="Color.Warning"
            Size="Size.Large"
            FullWidth="true"
            @onclick="this.ReloadRequested">
            @L["Components.States.GameFinished.Button"]
        </MudButton>
    </MudContainer>
</StateContainer>